app {
    name = "load4s"
    file {
        domain = "http://192.168.0.97:30000"
        directory = "/tmp/ec"
    }
    selenium {
        driver = "/usr/bin/chromedriver"
        remoteUrl = "http://localhost:4444/wd/hub"
        implicitlyWait = 5
        proxy {
            port = 30001
        }
        size {
            width = 1000
            height = 1200
        }
        pool {
            minIdle = 5
            maxIdle = 10
            maxTotal = 30
            maxWaitMillis = 60000
            minEvictableIdleTimeMillis = 600000
            timeBetweenEvictionRunsMillis = 1000
            testOnBorrow = true
            blockWhenExhausted = true
        }
    }
    server {
        host = "0.0.0.0"
        port = 30000
    }
    proxy {
        enable = false
        host = "127.0.0.1"
        port = 1087
        timeout = 5s
    }
    jwt {
        secret = "admin123"
        expire = 60s
    }
    db {
        driver = "com.mysql.cj.jdbc.Driver"
        url = "jdbc:mysql://dev2:3306/ecdouyin?useUnicode=true&allowPublicKeyRetrieval=true&useSSL=false&characterEncoding=utf-8"
        username = "root"
        password = "root"
        hikaricp {
            minimumIdle = 5
            maximumPoolSize = 30
            connectionTimeout = 10
            idleTimeout = 60
            maxLifetime = 3600000
            connectionInitSql = "SELECT 1"
        }
    }
    engine {
        trigger {
            speed = 1.milliseconds
            historySize = 5
            maxSize = 10
        }
        entrust {
            speed = 1.milliseconds
            historySize = 5
            maxSize = 10
        }
        position {
            speed = 1.milliseconds
        }
        slider {
            speed = 1.milliseconds
        }
    }

}

akka {
  stdout-loglevel = "OFF"
  loglevel = "OFF"
  stream.materializer.debug.fuzzing-mode = on
  actor {
    provider = cluster
    allow-java-serialization = off
    warn-about-java-serializer-usage = false
    serialize-messages = on
    serializers {
      java = "akka.serialization.JavaSerializer"
      kryo = "io.altoo.akka.serialization.kryo.KryoSerializer"
    }
    serialization-bindings {
      "java.lang.Object" = kryo
      "scala.collection.immutable.Vector" = kryo
      "com.dounine.ecdouyin.model.models.BaseSerializer" = kryo
    }
  }
  cluster {
    jmx.multi-mbeans-in-same-jvm = on
    min-nr-of-members = 1
    auto-down-unreachable-after = 10s
    seed-nodes = ["akka://"${app.name}"@127.0.0.1:25520"]
  }
  remote.artery {
      enabled = on
      transport = tcp
      canonical {
        hostname = "127.0.0.1"
        port = 25520
      }
  }

  persistence {
      journal {
        plugin = "akka.persistence.journal.leveldb"
        auto-start-journals = ["akka.persistence.journal.leveldb"]
        leveldb.dir = "/tmp/journal"
      }
      snapshot-store {
        plugin = "akka.persistence.snapshot-store.local"
        auto-start-snapshot-stores = ["akka.persistence.snapshot-store.local"]
        local.dir = "/tmp/snapshot"
      }
  }

}
